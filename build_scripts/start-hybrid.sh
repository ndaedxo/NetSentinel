#!/bin/bash
# Start the hybrid OpenCanary detection system

set -e

echo "üöÄ Starting OpenCanary Hybrid Detection System"
echo "=============================================="

# Check if Docker is running
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker is not running. Please start Docker first."
    exit 1
fi

# Build and start services
echo "üê≥ Building and starting services..."
docker-compose -f docker-compose-hybrid.yml up --build -d

# Wait for services to be healthy
echo "‚è≥ Waiting for services to be healthy..."
sleep 30

# Check service status
echo "üìä Checking service status..."
docker-compose -f docker-compose-hybrid.yml ps

# Display access information
echo ""
echo "üéâ OpenCanary Hybrid System is running!"
echo "======================================="
echo ""
echo "üì± Service Access URLs:"
echo "  ‚Ä¢ OpenCanary Honeypot:     http://localhost (ports 21,22,23,80,443,3306)"
echo "  ‚Ä¢ Kafka UI:               http://localhost:8080"
echo "  ‚Ä¢ Redis Commander:        http://localhost:8081"
echo "  ‚Ä¢ Event Processor API:    http://localhost:8082"
echo "  ‚Ä¢ Prometheus Metrics:     http://localhost:9090"
echo "  ‚Ä¢ Grafana Dashboards:     http://localhost:3000 (admin/hybrid-admin-2024)"
echo ""
echo "üîß Management Commands:"
echo "  ‚Ä¢ View logs:              docker-compose -f docker-compose-hybrid.yml logs -f"
echo "  ‚Ä¢ Stop system:            docker-compose -f docker-compose-hybrid.yml down"
echo "  ‚Ä¢ Restart services:       docker-compose -f docker-compose-hybrid.yml restart"
echo ""
echo "üîç Testing the System:"
echo "  ‚Ä¢ Test SSH:               ssh admin@localhost"
echo "  ‚Ä¢ Test FTP:               ftp localhost"
echo "  ‚Ä¢ Test HTTP:              curl http://localhost"
echo "  ‚Ä¢ Test Telnet:            telnet localhost 23"
echo ""
echo "üìà Monitoring:"
echo "  ‚Ä¢ View threats:           curl http://localhost:8082/threats"
echo "  ‚Ä¢ View metrics:           curl http://localhost:8082/metrics"
echo "  ‚Ä¢ Kafka topics:           http://localhost:8080"
echo ""
